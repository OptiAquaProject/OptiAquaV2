<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapi</name>
    </assembly>
    <members>
        <member name="M:webapi.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:webapi.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:webapi.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,webapi.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:webapi.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:webapi.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:webapi.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:webapi.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:webapi.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:webapi.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:webapi.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:webapi.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:webapi.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:webapi.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:webapi.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:webapi.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:webapi.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:webapi.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:webapi.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:webapi.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:webapi.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:webapi.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:webapi.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:webapi.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:webapi.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:webapi.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:webapi.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:webapi.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:webapi.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:webapi.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:webapi.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:webapi.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:webapi.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:webapi.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,webapi.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,webapi.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:webapi.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:webapi.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:webapi.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(webapi.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:webapi.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:webapi.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},webapi.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:webapi.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:webapi.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:webapi.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageSampleKey.#ctor(webapi.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:webapi.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:webapi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:webapi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:webapi.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,webapi.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:webapi.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:webapi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:webapi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:webapi.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:webapi.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:webapi.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:webapi.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:webapi.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:webapi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:webapi.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:webapi.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:webapi.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:webapi.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:webapi.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:webapi.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:webapi.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:webapi.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:webapi.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:webapi.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:webapi.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:webapi.Controllers.ParcelaReganteController.Get(System.Int32,System.String)">
            <summary>
            Parcelas que pertenencen a un regante en una temporada indicada
            </summary>
            <param name="idRegante"></param>
            <param name="temporada"></param>
            <returns></returns>C:\OVERLINE\OptiAqua\webapi\Controllers\Parcelas.cs
        </member>
        <member name="M:webapi.Controllers.ParcelaReganteController.Get(System.Int32)">
            <summary>
            Parcelas asociadas a un Regante
            </summary>
            <param name="idRegante"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.Controllers.SuelosTipoController.Get(System.Int32)">
            <summary>
            Retornar un suelo tipo con sus horizontes
            </summary>
            <param name="json"></param>        
            <returns></returns>
        </member>
        <member name="M:webapi.Controllers.SuelosTipoController.Post(System.String)">
            <summary>
            Dar de alta un Suelo Tipo con sus horizontes
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.Controllers.RiegosController.Get(System.Int32,System.String)">
            <summary>
            Riegos de una parcela en una temporada.
            </summary>
            <param name="idParcela"></param>
            <param name="temporada"></param>
            <returns></returns>
        </member>
        <member name="T:webapi.Controllers.ParcelaController">
            <summary>
            Proporciona los datos de las parcelas y las propiedades de su suelo.
            </summary>
        </member>
        <member name="M:webapi.Controllers.ParcelaController.Get(System.Int32)">
            <summary>
            Datos de la parcela indicada 
            </summary>
            <param name="idParcela"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.Controllers.ParcelaController.GetHorizontes(System.Int32,System.String)">
            <summary>
            Datos de los horizontes de la parcela. idHorizonte puede ser el identificado del horizonte o "ALL" para retornar lista de todos los horizontes.
            </summary>
            <param name="idParcela"></param>
            <param name="idHorizonte"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.Controllers.ParcelaController.Post(System.Int32,System.Int32,System.String)">
            <summary>
            Dar de alta o actualzar datos de parcela.
            Si idSuelo!=-1 creará la lista de horizontes según el idSueloTipo indicado.
            </summary>
            <param name="idParcela"></param>
            <param name="idSueloTipo"></param>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.Controllers.ParcelaController.Post(System.Int32,System.String,System.String)">
            <summary>
            Dar de alta o actulizar horizonte. idHorizonte puede ser el identificador del horizonte o "ALL" par establecer todos los horizontes al mismo tiempo.
            </summary>
            <param name="idParcela"></param>
            <param name="idHorizonte"></param>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.Controllers.BalanceHidricoController.Get(System.Int32,System.String)">
            <summary>
            Balance hídrico de una parcela en una temporada.
            </summary>
            <param name="idParcela"></param>
            <param name="temporada"></param>
            <returns>Balance en formato JSon</returns>
        </member>
        <member name="T:webapi.Controllers.FasesController">
            <summary>
            Proporciona información de las fases de la parcela indicada
            </summary>
        </member>
        <member name="M:webapi.Controllers.FasesController.Get(System.Int32,System.String)">
            <summary>
            Fases de una parcela en una temporada.
            </summary>
            <param name="idParcela"></param>
            <param name="temporada"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.Controllers.AltaParcelaTemporadaController.Get(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Crea o actualiza en la base de datos con los datos indicado
            </summary>
            <param name="idParcela"></param>
            <param name="idTemporada"></param>
            <param name="idCultivo"></param>
            <param name="idRegante"></param>
            <param name="idTipoRiego"></param>
            <param name="fechaSiembra"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.Controllers.TemporadaController.Get">
            <summary>
            Todas las temporadas utilizadas.
            </summary>
            <returns></returns>
        </member>
        <member name="M:webapi.Controllers.TemporadaController.Get(System.Int32)">
            <summary>
            Todas las temporadas de la parcela indicada.
            </summary>
            <param name="idParcela"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DB.Riegos(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Carga los Riegos de una Parcela en un intervalo de fechas
            </summary>
            <param name="idParcela"></param>
            <param name="desdeFecha"></param>
            <param name="hastaFecha"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DB.ParcelaCultivo(System.Int32,System.String)">
            <summary>
            Retorna los datos de la tabla ParcelasCultivo.
            </summary>
            <param name="idParcela"></param>
            <param name="temporada"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DB.Parcela(System.Int32)">
            <summary>
            Retorna una clase con todos los valores de la parcela IdParcela desde BD.
            </summary>
            <param name="idParcela"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DB.ParcelaJSON(System.Int32)">
            <summary>
            Retorna lo datos de la parcela en formato JSON
            </summary>
            <param name="idParcela"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DB.Cultivo(System.Int32)">
            <summary>
            Carga los datos del cultivo referenciado
            </summary>
            <param name="IdCultivo"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.#ctor(System.Int32,System.String)">
            <summary>
            Clase para el cálculo del balance hídrico. 
            </summary>
            <param name="idParcela"></param>
            <param name="temporada"></param>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.DatoExtra(System.DateTime)">
            <summary>
            Retorna los datos extra a una fecha.  0 Si no se dispone de datos en esa fecha
            </summary>
            <param name="fecha"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.FechaSiembra">
            <summary>
            Retorna primera fecha de las fases como fecha de siembra.
            En caso de que no existandatos retorna fecha actual.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.FechaFinalDeEstudio">
            <summary>
            Retonar el cálculo de la fecha de fin de estudio.
            Si se excede de fecha del día retornar la fecha del día.
            Si no hay datos suficientes para el cálculo retorna fecha del día.
            </summary>
            <param name="fases"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.ObtenerRiego(System.DateTime)">
            <summary>
            Retorna los datos de riego a una fecha. 0 Si no se dispone de datos en esa fecha
            </summary>
            <param name="fecha"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.VelocidadViento(System.DateTime)">
            <summary>
            Retorna velocidad del viento a una Fecha.  0 Si no se dispone de datos en esa fecha
            </summary>
            <param name="fecha"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.HumedadMedia(System.DateTime)">
            <summary>
            Retorna Humedad media a una fecha. 0 Si no se dispone de datos en esa fecha
            </summary>
            <param name="fecha"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.Temperatura(System.DateTime)">
            <summary>
            Retorna la temperatura a una fecha.  0 Si no se dispone de datos en esa fecha
            </summary>
            <param name="fecha"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.lluvia(System.DateTime)">
            <summary>
            Retorna los mm de lluvía a una fecha.  0 Si no se dispone de datos en esa fecha
            </summary>
            <param name="fecha"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.Eto(System.DateTime)">
            <summary>
            Retorna el valor de Evotranspieración a una fecha.  0 Si no se dispone de datos en esa fecha
            </summary>
            <param name="fecha"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaTcCob(System.Double,System.Int32,System.Double)">
            <summary>
            calculo de la Cobertura por el método de la Tasa de Crecimiento
            </summary>
            <param name="it"></param> Integral térmica
            <param name="nFase"></param> Fase
            <param name="itEmergencia"></param> Integral térmica de emergencia.
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaTcAlt(System.Double,System.Int32,System.Double)">
            <summary>
            Calculo de la altura por el método de la Tasa de crecimiento
            </summary>
            <param name="it"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaNFaseDesarrollo(System.DateTime,System.Double,System.Int32)">
            <summary>
            Retorna en Nº de fase en la que nos encontramos en base 1 (1,2,3,4....)
            Párametro nFase está en base 1 y la tabla de fases en base 0
            </summary>
            <param name="fecha"></param>
            <param name="cobertura"></param>
            <param name="nFase"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalulaKc(System.Int32,System.DateTime,System.Double)">
            <summary>
            Calculo del Coeficiento de cultivo
            </summary>
            <param name="nFase"></param> fase. Valor de 1 a N.
            <param name="fecha"></param> fecha
            <param name="cob"></param> cobertura
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaP(System.Double,System.Int32)">
            <summary>
            Calculo de Depletion Factor
            </summary>
            <param name="etc"></param> evapotranspiración del cultivo en mm.
            <param name="nFase"></param> nFase valor de 1..N
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaRAW(System.Double,System.Double)">
            <summary>
            Fracción de agua que planta puede extraer
            </summary>
            <param name="taw"></param>
            <param name="p"></param> Factor de agotamiento
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaRAW2(System.Double,System.Int32)">
            <summary>
            Caculo de 
            </summary>
            <param name="taw"></param>
            <param name="nFase"></param> El parámetro se pasa en base 1
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalulaccRaw(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="raw"></param>
            <param name="cc"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaPM(System.Double)">
            <summary>
            
            </summary>
            <param name="root"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaPrecipitacionEfectiva(System.Double,System.Double)">
            <summary>
            Calculo de la precipitación efectiva
            </summary>
            <param name="lluvia"></param>
            <param name="eto"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaKs(System.Double,System.Double,System.Double)">
            <summary>
            Calculo de Ks
            </summary>
            <param name="taw"></param>
            <param name="raw"></param>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaKcAdj(System.Double,System.Double)">
            <summary>
            Calcula el Coeficiente de Cultivo ajustado
            </summary>
            <param name="KcAdjClima"></param>
            <param name="ks"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaEtcAdj(System.Double,System.Double)">
            <summary>
            Calcula la evotranspiració calculada
            </summary>
            <param name="kcAdj"></param>
            <param name="eto"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaRiegoEfectivo(System.Double,System.Double)">
            <summary>
            Cálculo del eigo efectivo
            </summary>
            <param name="riego"></param>
            <param name="eto"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaDP(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Drenaje de profundidad
            </summary>
            <param name="ETcAdj"></param>
            <param name="rieEfec"></param>
            <param name="pef"></param>
            <param name="driStart"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaTAW(System.Double)">
            <summary>
            agua disponible en el suelo en la zona radicular
            </summary>
            <param name="root"></param> Profundidad de la raiz
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaOS(System.Double,System.Double,System.Double,Datos.Entidades.LineaBalance)">
            <summary>
            
            </summary>
            <param name="root"></param>
            <param name="drEnd"></param>
            <param name="cc"></param>
            <param name="lbAnt"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaDriEnd(System.DateTime,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Datos.Entidades.LineaBalance)">
            <summary>
            Deficit hídrico 
            </summary>
            <param name="fecha"></param> Fecha
            <param name="root"></param> Profundidad de la raiz
            <param name="cc"></param> Capacidad de campo
            <param name="ETcAdj"></param> Evotranspiración ajustada
            <param name="rieEfec"></param> Riego efectivo
            <param name="pef"></param> Precipitación efectiva.
            <param name="drStart"></param> Déficit hídrio inicial
            <param name="dp"></param> Drenaje en profundidad
            <param name="lbAnt"></param> Structura con los datos de la anterior línea de balance.
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaRecomendacionRiegoMm(System.Double,System.Int32,System.Double)">
            <summary>
            Retorna la recomendación de riego en mm 
            </summary>
            <param name="raw"></param>
            <param name="fase"></param>
            <param name="drStar"></param>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaLineaBalance(System.DateTime,Datos.Entidades.LineaBalance)">
            <summary>
            Cálculo de todos lo valores en una línea del balance hídrico.
            </summary>
            <param name="fecha"></param> Fecha que se desea calcular
            <param name="lbAnt"></param> Línea anterior
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaCobertura(System.DateTime,System.Double,System.Double,System.Double)">
            <summary>
            Calcula la Cobertura a una fecha dada. Tiene en cuenta si se han indicado datos extra.
            </summary>
            <param name="fecha"></param>
            <param name="antCob"></param>
            <param name="tcCob"></param>
            <param name="incT"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Datos.Calculo.DatosCalculo.CalculaAltura(System.DateTime,System.Double,System.Double,System.Double)" -->
        <member name="M:Datos.Calculo.DatosCalculo.CalculaBalanceHidrico">
            <summary>
            Calculo del balance hídrico.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Datos.Calculo.DatosCalculo.CalculaBalanceHidricoJSON">
            <summary>
            Calculo del balance hídrico.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
